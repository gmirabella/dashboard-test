version: '3.7'
services:
  server:
    build:
      context: ""
      dockerfile: server/Dockerfile.server
    ports:
    - "8080:8080"
    - "5005:5005"
    - "9010:9010"
    environment:
    - APP_NAME=dashboard-download
#  client:
#    depends_on:
#      - server
#    build:
#      context: ""
#      dockerfile: client/Dockerfile.client
#    ports:
#    - "3000:3000"
#    environment:
#    - APP_NAME=dashboard-download
#  zookeeper:
#    image: wurstmeister/zookeeper
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#    - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: "2181"
#  kafka:
#    image: wurstmeister/kafka:2.12-2.3.0
#    hostname: kafk
#    container_name: kafka
#    depends_on:
#    - zookeeper
#    ports:
#    - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: "1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "test:1:1"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
#      KAFKA_LISTENERS: PLAINTEXT://:9092
#    volumes:
#    - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: test
    volumes:
    - './ddl:/docker-entrypoint-initdb.d'
    ports:
    - "5432:5432"